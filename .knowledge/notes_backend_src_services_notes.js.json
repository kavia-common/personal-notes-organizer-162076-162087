{"is_source_file": true, "format": "JavaScript", "description": "This file defines and exports various functions for managing 'notes' in a database, including creating the notes table, adding, retrieving, listing, updating, and deleting notes associated with users. It interfaces with a database through SQL queries and handles data normalization, search, and filter functionalities.", "external_files": ["../db"], "external_methods": ["query"], "published": ["createNotesTableIfNotExists", "createNote", "getNoteById", "listNotes", "updateNote", "deleteNote"], "classes": [], "methods": [{"name": "createNotesTableIfNotExists()", "description": "Ensures the 'notes' table exists with the specified schema, creating it if necessary.", "scope": "", "scopeKind": ""}, {"name": "createNote(userId, { title, content = '', tags = [], isArchived = false })", "description": "Creates a new note for a user with optional tags and archived status, then retrieves and returns the created note.", "scope": "", "scopeKind": ""}, {"name": "getNoteById(userId, noteId)", "description": "Retrieves a specific note by its ID for a particular user, normalizing tags and archived status.", "scope": "", "scopeKind": ""}, {"name": "listNotes(userId, { search, tag, archived, sortBy = 'updated_at', sortDir = 'DESC', limit = 20, offset = 0 })", "description": "Lists notes for a user with optional search, tag filtering, archived status, sorting, and pagination.", "scope": "", "scopeKind": ""}, {"name": "updateNote(userId, noteId, { title, content, tags, isArchived })", "description": "Updates fields of an existing note if it belongs to the user, returning the updated note.", "scope": "", "scopeKind": ""}, {"name": "deleteNote(userId, noteId)", "description": "Deletes a note owned by the user, returning true if deletion was successful.", "scope": "", "scopeKind": ""}], "calls": ["query", "getNoteById"], "search-terms": ["notes table schema", "CRUD notes", "full-text search notes", "tags JSON", "user-specific notes", "notes database operations"], "state": 2, "file_id": 21, "knowledge_revision": 51, "git_revision": "", "ctags": [{"_type": "tag", "name": "createNote", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-162076-162087/notes_backend/src/services/notes.js", "pattern": "/^async function createNote(userId, { title, content = '', tags = [], isArchived = false }) {$/", "language": "JavaScript", "kind": "function", "signature": "(userId, { title, content = '', tags = [], isArchived = false })"}, {"_type": "tag", "name": "createNotesTableIfNotExists", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-162076-162087/notes_backend/src/services/notes.js", "pattern": "/^  createNotesTableIfNotExists,$/", "language": "JavaScript", "kind": "field", "scope": "module.exports", "scopeKind": "class"}, {"_type": "tag", "name": "createNotesTableIfNotExists", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-162076-162087/notes_backend/src/services/notes.js", "pattern": "/^async function createNotesTableIfNotExists() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "deleteNote", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-162076-162087/notes_backend/src/services/notes.js", "pattern": "/^async function deleteNote(userId, noteId) {$/", "language": "JavaScript", "kind": "function", "signature": "(userId, noteId)"}, {"_type": "tag", "name": "getNoteById", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-162076-162087/notes_backend/src/services/notes.js", "pattern": "/^async function getNoteById(userId, noteId) {$/", "language": "JavaScript", "kind": "function", "signature": "(userId, noteId)"}, {"_type": "tag", "name": "listNotes", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-162076-162087/notes_backend/src/services/notes.js", "pattern": "/^async function listNotes(userId, { search, tag, archived, sortBy = 'updated_at', sortDir = 'DESC/", "language": "JavaScript", "kind": "function", "signature": "(userId, { search, tag, archived, sortBy = 'updated_at', sortDir = 'DESC', limit = 20, offset = 0 })"}, {"_type": "tag", "name": "updateNote", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-162076-162087/notes_backend/src/services/notes.js", "pattern": "/^async function updateNote(userId, noteId, { title, content, tags, isArchived }) {$/", "language": "JavaScript", "kind": "function", "signature": "(userId, noteId, { title, content, tags, isArchived })"}], "hash": "414f70c2bb2709e41c53f694dc260a05", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/services/notes.js", "fields": [{"name": "createNotesTableIfNotExists,", "scope": "module.exports", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"51": ""}]}